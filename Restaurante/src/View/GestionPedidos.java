/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Classes.*;
import Controller.*;
import Model.*;

import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.TabableView;
import sun.swing.table.DefaultTableCellHeaderRenderer;

/**
 *
 * @author lenovo
 */
public class GestionPedidos extends javax.swing.JFrame {
    ArrayList<Pedido> listaPedido= new ArrayList<>();
    ArrayList<Plato> listaPlato= new ArrayList<>();
    
    float ventasTotales;
    float ventaDiaria;
    
    ctlPlato ctPlato;
    ctlPedido ctPedido;


    
    /**
     * Creates new form GestionPedidos
     */
    public GestionPedidos() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.ctPedido= new ctlPedido();
        this.ctPlato= new ctlPlato();
        reporteMenu();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPlatosPedido = new javax.swing.JList<>();
        jPanel7 = new javax.swing.JPanel();
        btnCrearPedido = new javax.swing.JButton();
        cbMesa = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnAgregarPlatoParaElPedido = new javax.swing.JButton();
        btnAgregarPlato = new javax.swing.JButton();
        btnActualizarPlato = new javax.swing.JButton();
        btnEliminarPlato = new javax.swing.JButton();
        txtNombrePlato = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPrecioPlato = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtIdPlato = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        TablaMenu = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaPedido = new javax.swing.JTable();
        txtTotalPedido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnPagarPedido = new javax.swing.JButton();
        btnCancelarPedido = new javax.swing.JButton();
        btCalcularPedido = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaVentas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btCerrarCaja = new javax.swing.JButton();
        txtCerrarCaja = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listaPlatosPedido.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jScrollPane1.setViewportView(listaPlatosPedido);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("GESTION PEDIDO"));

        btnCrearPedido.setText("CREAR PEDIDO");
        btnCrearPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearPedidoActionPerformed(evt);
            }
        });

        cbMesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel5.setText("Mesa");

        btnAgregarPlatoParaElPedido.setText("AGREGAR PLATO AL PEDIDO");
        btnAgregarPlatoParaElPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPlatoParaElPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgregarPlatoParaElPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCrearPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(cbMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 247, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(btnAgregarPlatoParaElPedido)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearPedido)
                    .addComponent(jLabel5)
                    .addComponent(cbMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        btnAgregarPlato.setText("AGREGAR PLATO AL MENÚ");
        btnAgregarPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPlatoActionPerformed(evt);
            }
        });

        btnActualizarPlato.setText("ACTUALIZAR PLATO");
        btnActualizarPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarPlatoActionPerformed(evt);
            }
        });

        btnEliminarPlato.setText("ELIMINAR PLATO");
        btnEliminarPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPlatoActionPerformed(evt);
            }
        });

        jLabel6.setText("Nombre plato:");

        jLabel7.setText("Precio plato");

        txtPrecioPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioPlatoActionPerformed(evt);
            }
        });

        jLabel8.setText("Id Plato:");

        TablaMenu.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        TablaMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOMBRE PLATO", "PRECIO PLATO"
            }
        ));
        TablaMenu.setGridColor(new java.awt.Color(153, 255, 204));
        TablaMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMenuMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(TablaMenu);
        if (TablaMenu.getColumnModel().getColumnCount() > 0) {
            TablaMenu.getColumnModel().getColumn(0).setResizable(false);
            TablaMenu.getColumnModel().getColumn(0).setPreferredWidth(1);
            TablaMenu.getColumnModel().getColumn(1).setResizable(false);
            TablaMenu.getColumnModel().getColumn(1).setPreferredWidth(5);
            TablaMenu.getColumnModel().getColumn(2).setResizable(false);
            TablaMenu.getColumnModel().getColumn(2).setPreferredWidth(3);
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Menú");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAgregarPlato)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminarPlato))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombrePlato, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txtPrecioPlato)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8))
                            .addComponent(btnActualizarPlato))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdPlato, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 20, Short.MAX_VALUE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNombrePlato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtPrecioPlato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtIdPlato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarPlato)
                    .addComponent(btnAgregarPlato)
                    .addComponent(btnActualizarPlato))
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Gestion Pedidos", jPanel2);

        TablaPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MESA", "NOMBRE PLATO", "VALOR PLATO"
            }
        ));
        jScrollPane3.setViewportView(TablaPedido);

        txtTotalPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalPedidoActionPerformed(evt);
            }
        });

        jLabel3.setText("TOTAL A PAGAR:");

        btnPagarPedido.setText("PAGAR PEDIDO");
        btnPagarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarPedidoActionPerformed(evt);
            }
        });

        btnCancelarPedido.setText("CANCELAR PEDIDO");

        btCalcularPedido.setText("CALCULAR PAGO");
        btCalcularPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalcularPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTotalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btCalcularPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPagarPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnCancelarPedido)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                .addComponent(btCalcularPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnPagarPedido)
                    .addComponent(btnCancelarPedido))
                .addGap(28, 28, 28))
        );

        jTabbedPane1.addTab("Pedido", jPanel5);

        TablaVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MESA", "NOMBRE PLATO", "VALOR UNITARIO"
            }
        ));
        jScrollPane4.setViewportView(TablaVentas);

        btCerrarCaja.setText("CERRAR CAJA DIARIA");
        btCerrarCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCerrarCajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(btCerrarCaja)
                .addGap(18, 18, 18)
                .addComponent(txtCerrarCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCerrarCaja)
                    .addComponent(txtCerrarCaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Caja Diaria", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addGap(0, 0, 0))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("El sazon de mamá");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTotalPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalPedidoActionPerformed

    private void btnCrearPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearPedidoActionPerformed
        try {
            // adquirir la información que ingresa el usuario en los campos
            int mesa = Integer.parseInt(cbMesa.getSelectedItem().toString());

//            int id = Integer.parseInt(txtIdPlato.getText());
//            String nombrePlato = txtNombrePlato.getText();
//            float precioPlato = Float.parseFloat(txtPrecioPlato.getText());

            // crear mi objeto con los valores que ingresó el usuario para crear lista de platos               
            Pedido pedido = new Pedido(mesa, false, (ArrayList<Plato>) listaPlato.clone());
            //Métodos temprorales
            this.agregarPedido(pedido);
            this.listarTablaPedido();
            this.clearlisPedido();

            // llamar a la controladora con el método correspondiente que en este caso crear       
            if (this.ctPedido.crearPedido(pedido)) {
                JOptionPane.showMessageDialog(this, "El pedido fue creado correctamente");
                reporteTemporalPedido();
                this.clearPlato();
            } else {
                JOptionPane.showMessageDialog(this, "El pedido NO fue creado correctamente, intente de nuevo!");
            }

        } catch (Exception e) {
            //excepción que puede surgir
            JOptionPane.showMessageDialog(this, "Favor agregar un Precio válido");
        }  
//Método temporal      
//        try {
//            int mesa = Integer.parseInt(cbMesa.getSelectedItem().toString());
//            
//            Pedido pedido = new Pedido(mesa, false,(ArrayList<Plato>) listaPlato.clone());
//            
//            this.agregarPedido(pedido);        
//            this.listarTablaPedido();
//            
//            this.clearlisPedido();
//            
//            
//            
//            JOptionPane.showMessageDialog(this, "El pedido se agrego con éxito");
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Favor agregar un Id y un Precio válido");
//        }
    }//GEN-LAST:event_btnCrearPedidoActionPerformed

    private void btnAgregarPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPlatoActionPerformed
        try {
            // adquirir la información que ingresa el usuario en los campos
            int id = Integer.parseInt(txtIdPlato.getText());
            String nombrePlato = txtNombrePlato.getText();
            float precio = Float.parseFloat(txtPrecioPlato.getText());

            if (nombrePlato.equals("")) {
                JOptionPane.showMessageDialog(this, "Rellene todos los campos del plato");
            } else {

                // crear mi objeto con los valores que ingresó el usuario para crear plato      
                Plato plato = new Plato(id, nombrePlato, precio);

                // llamar a la controladora con el método correspondiente que en este caso crear       
                if (this.ctPlato.crearPlato(plato)) {
                    JOptionPane.showMessageDialog(this, "El plato fue registrado correctamente al Menú");
                    reporteMenu();
                    this.clearPlato();
                } else {
                    JOptionPane.showMessageDialog(this, "El Menú NO fue registrado correctamente, intente de nuevo!");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Favor agregar un Precio válido");
        }
    }//GEN-LAST:event_btnAgregarPlatoActionPerformed

    private void btnEliminarPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPlatoActionPerformed
        try {
        // adquirir la información que ingresa el usuario en el campo, como en este caso
        //es para eliminar solamente necesito capturar el Id
        int Id= Integer.parseInt(txtIdPlato.getText());
        String nombrePlato= txtNombrePlato.getText();
        float precioPlato= Float.parseFloat(txtPrecioPlato.getText());
        
        // crear mi objeto con los valores que ingresó el usuario para enviarlos a la controladora
        //Plato plato=new Plato(nombrePlato, precioPlato);
         
         // llamar a la controladora con el método correspondiente que en este caso es el de eliminar
        if (this.ctPlato.eliminarPlato(Id)) {
            JOptionPane.showMessageDialog(this, "El plato fue eliminado correctamente");
            clearPlato();
            reporteMenu();   
        } else{
            JOptionPane.showMessageDialog(this, "El plato NO fue eliminado correctamente, intente de nuevo!");
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Favor agregar un Precio válido");
        }
    }//GEN-LAST:event_btnEliminarPlatoActionPerformed

    private void btnPagarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarPedidoActionPerformed
        try {
            txtCerrarCaja.setText("");
            
            for (Pedido pagar : listaPedido) {
                pagar.setPagarPedido(true);
            }
            this.clearTablaPedido();
            this.listarVentas();
            txtTotalPedido.setText("");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Favor agregar un Id y un Precio válido");
        }
    }//GEN-LAST:event_btnPagarPedidoActionPerformed

    private void txtPrecioPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioPlatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioPlatoActionPerformed

    private void btnActualizarPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarPlatoActionPerformed
        try {// adquirir la información que ingresa el usuario en el campo, como en este caso
            //es para eliminar solamente necesito capturar el Id
            int Id = Integer.parseInt(txtIdPlato.getText());
            String nombrePlato = txtNombrePlato.getText();
            float precioPlato = Float.parseFloat(txtPrecioPlato.getText());

            //crear mi objeto con los valores que ingresó el usuario para enviarlos a la controladora
            Plato plato = new Plato(Id, nombrePlato, precioPlato);
            

            // llamar a la controladora con el método correspondiente que en este caso es el de eliminar
            if (this.ctPlato.actualizarPlato(Id, plato)) {
                JOptionPane.showMessageDialog(this, "El plato fue actualizado correctamente");
                clearPlato();
                reporteMenu();
            } else {
                JOptionPane.showMessageDialog(this, "El plato NO fue actualizado correctamente, intente de nuevo!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Favor agregar un Precio válido");
        }
    }//GEN-LAST:event_btnActualizarPlatoActionPerformed

    private void btnAgregarPlatoParaElPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPlatoParaElPedidoActionPerformed
        try {
            // adquirir la información que ingresa el usuario en los campos    
            int id = Integer.parseInt(txtIdPlato.getText());
            String nombrePlato = txtNombrePlato.getText();
            float precioPlato = Float.parseFloat(txtPrecioPlato.getText());

            if (nombrePlato.equals("")) {
                JOptionPane.showMessageDialog(this, "Rellene todos los campos del plato");
            } else {

                // crear mi objeto con los valores que ingresó el usuario para crear lista de platos               
                Plato plato = new Plato(id, nombrePlato, precioPlato);
                listaPlato.add(plato);

                // llamar a la controladora con el método correspondiente que en este caso crear       
                if (this.ctPedido.crearPlatosParaListaPedido(plato)) {
                    JOptionPane.showMessageDialog(this, "El plato fue agregado correctamente al pedido");
                    reporteTemporalPedido();
                    this.clearPlato();
                } else {
                    JOptionPane.showMessageDialog(this, "El plato NO fue agregado correctamente, intente de nuevo!");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Favor agregar un Precio válido");
        }
//        int id = Integer.parseInt(txtIdPlato.getText());    
//         boolean found=false;
//         for (Plato plato : listaPlato) {
//            if(plato.getId()==id){
//                txtNombrePlato.setText(plato.getNombrePlato());
//                txtPrecioPlato.setText(plato.getPrecioPlato()+"");
//                found= true;
//                break;
//            }                 
//        }
//        if (!found){
//            JOptionPane.showMessageDialog(this, "Id no encotrado");
//        }    
    }//GEN-LAST:event_btnAgregarPlatoParaElPedidoActionPerformed

    private void btCerrarCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCerrarCajaActionPerformed
       
        float venta=this.calcularVentaDiaria();
        txtCerrarCaja.setText(String.valueOf(venta));
       
    }//GEN-LAST:event_btCerrarCajaActionPerformed

    private void btCalcularPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalcularPedidoActionPerformed
        //Pedido todos=new Pedido();
        float venta = 0;
       //ArrayList< Pedido> pedi=(ArrayList<Pedido>)listaPedido.clone();
        for( Pedido calcular:listaPedido){
            float acumular;
           venta=Pedido.calcularPago(calcular);          
       } 
        txtTotalPedido.setText(String.valueOf(venta));     
           
//            for (Plato valor : venta.getListaPlato()) {
//                acumular = valor.getPrecioPlato();
//                ventaDiaria += acumular;
//            }
//        }
//        listaPedido.clear();
//        return ventaDiaria;
            
    }//GEN-LAST:event_btCalcularPedidoActionPerformed

    private void TablaMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMenuMouseClicked
        // Selecciono de la tabla Menu
        int fila=TablaMenu.getSelectedRow();
        if(fila==-1){
            JOptionPane.showMessageDialog(null, "Usuario no seleccionado");
        }else{
            int id=Integer.parseInt((String) TablaMenu.getValueAt(fila,0).toString());//fila columna 0
            String nombrePlato=(String)TablaMenu.getValueAt(fila, 1);//fila columna 1
            String precioPalto=(String)TablaMenu.getValueAt(fila, 2);//fila columna 2
            txtIdPlato.setText(""+id);//coloca valores en la caja respectivamente.
            txtNombrePlato.setText(nombrePlato);
            txtPrecioPlato.setText(precioPalto);
        }
    }//GEN-LAST:event_TablaMenuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionPedidos().setVisible(true);
            }
        });
    }

    public float calcularVentaDiaria() {
        ventaDiaria=0;
        for (Pedido venta : listaPedido) {
            float acumular;
            for (Plato valor : venta.getListaPlato()) {
                acumular = valor.getPrecioPlato();
                ventaDiaria += acumular;
            }
        }
        listaPedido.clear();
        return ventaDiaria;
    }

    public void agregarPedido(Pedido pedido) {
        listaPlato.clear();
        listaPedido.add(pedido);     
    }

//    private void lisMenu() {
//        
//        String sql ="select * from plato";
//    try{
//        cn=con.getConnection();
//        st=cn.createStatement();
//        rs=st.executeQuery(sql);
//        Object[]persona=new Object[3];
//        modelo = (DefaultTableModel)TablaDatos.getModel();
//        while(rs.next()){
//            persona[0]=rs.getInt("Id");
//            persona[1]=rs.getString("DNI");
//            persona[2]=rs.getString("Nombres");
//            modelo.addRow(persona);
//        }
//        TablaDatos.setModel(modelo);
//    }catch(Exception e){
//    }
    

    private void clearlisPedido() {
        cbMesa.setSelectedIndex(0);
        DefaultListModel model = new DefaultListModel();
        model.removeAllElements();
        listaPlatosPedido.setModel(model);
        listaPlato.clear();
    }
    
    private void clearTablaPedido() {
        cbMesa.setSelectedIndex(0);
        //TablaPedido.removeAll();
        DefaultTableModel modelo = (DefaultTableModel) TablaPedido.getModel();
        modelo.setRowCount(0);
        Object[] ob = new Object[3];

        for (Pedido venta : listaPedido) {
            for (Plato plato : venta.getListaPlato()) {
                ob[0] = "";
                ob[1] = "";
                ob[2] = "";
                modelo.addRow(ob);
            }
        }
        TablaPedido.setModel(modelo);        
    }

    private void clearPlato() {
        txtIdPlato.setText("");
        txtNombrePlato.setText("");
        txtPrecioPlato.setText("");
    }

    public void listarTablaPedido() {
      
        DefaultTableModel modelo = (DefaultTableModel) TablaPedido.getModel();
        modelo.setRowCount(0);    
        Object[] ob = new Object[3];
        for (Pedido venta : listaPedido) {
            if (venta.isPagarPedido() == false) {
                for (Plato plato : venta.getListaPlato()) {
                    //ob[0]= venta.
                    ob[0] = venta.getMesa();
                    ob[1] = plato.getNombrePlato();
                    ob[2] = plato.getPrecioPlato();
                    modelo.addRow(ob);
                }
            }
        }
        TablaPedido.setModel(modelo);      
    }

    public void listarVentas() {
        //  ArrayList<Pedido> listP = listaPedido;
        DefaultTableModel modelo = (DefaultTableModel) TablaVentas.getModel();
        modelo.setRowCount(0);
        Object[] ob = new Object[3];

        for (Pedido venta : listaPedido) {
            for (Plato plato : venta.getListaPlato()) {
                ob[0] = venta.getMesa();
                ob[1] = plato.getNombrePlato();
                ob[2] = plato.getPrecioPlato();
                modelo.addRow(ob);
            }
        }
        TablaVentas.setModel(modelo);
    }
    //Tabla de menú del restaurante
    public void reporteMenu(){
        DefaultTableModel tablaMenu;
        tablaMenu =  this.ctPlato.listarMenu();      
        TablaMenu.setModel(tablaMenu);        
    }
    //Tabla de pedidos temporales
    public void reporteTemporalPedido(){
        DefaultListModel listaTemporalPedido;
        listaTemporalPedido =  this.ctPedido.listarPlatosParaPedido();      
        listaPlatosPedido.setModel(listaTemporalPedido);        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaMenu;
    private javax.swing.JTable TablaPedido;
    private javax.swing.JTable TablaVentas;
    private javax.swing.JButton btCalcularPedido;
    private javax.swing.JButton btCerrarCaja;
    private javax.swing.JButton btnActualizarPlato;
    private javax.swing.JButton btnAgregarPlato;
    private javax.swing.JButton btnAgregarPlatoParaElPedido;
    private javax.swing.JButton btnCancelarPedido;
    private javax.swing.JButton btnCrearPedido;
    private javax.swing.JButton btnEliminarPlato;
    private javax.swing.JButton btnPagarPedido;
    private javax.swing.JComboBox<String> cbMesa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> listaPlatosPedido;
    private javax.swing.JTextField txtCerrarCaja;
    private javax.swing.JTextField txtIdPlato;
    private javax.swing.JTextField txtNombrePlato;
    private javax.swing.JTextField txtPrecioPlato;
    private javax.swing.JTextField txtTotalPedido;
    // End of variables declaration//GEN-END:variables
}
