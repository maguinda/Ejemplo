/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Classes.*;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author lenovo
 */
public class frmPet extends javax.swing.JFrame {
    LinkedList<clsCat> catObjectList= new LinkedList<>();
    LinkedList<clsDog> dogObjectList= new LinkedList<>();

    /** Creates new form frmPet */
    public frmPet() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        petList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCodeCat = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNameCat = new javax.swing.JTextField();
        txtBornYearCat = new javax.swing.JTextField();
        txtColorCat = new javax.swing.JTextField();
        cbHealthStatusCat = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbBreedCat = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        btnCrearCat = new javax.swing.JButton();
        btnBuscarCat = new javax.swing.JButton();
        btnEditarCat = new javax.swing.JButton();
        btnEliminarCat = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCodeDog = new javax.swing.JTextField();
        txtBornYearDog = new javax.swing.JTextField();
        txtNameDog = new javax.swing.JTextField();
        txtColorDog = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnCrearDog = new javax.swing.JButton();
        btnBuscarDog = new javax.swing.JButton();
        btnEditarDog = new javax.swing.JButton();
        btnEliminarDog = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cbHealthStatusDog = new javax.swing.JComboBox<>();
        cbBreedDog = new javax.swing.JComboBox<>();
        cbPedigree = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Pet Manager");

        petList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Pet 1", "Pet 2", "Pet 3", "Pet 4", "Pet 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(petList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pet list", jPanel1);

        jLabel2.setText("Code:");

        jLabel3.setText("Name:");

        jLabel4.setText("Born year:");

        jLabel5.setText("Color:");

        jLabel6.setText("Breed:");

        cbHealthStatusCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sick", "Healthy", "In Surgery" }));

        jLabel7.setText("Health Status:");

        cbBreedCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Criollo", "Angora" }));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));

        btnCrearCat.setText("CREAR");
        btnCrearCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCatActionPerformed(evt);
            }
        });

        btnBuscarCat.setText("BUSCAR");
        btnBuscarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCatActionPerformed(evt);
            }
        });

        btnEditarCat.setText("EDITAR");
        btnEditarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCatActionPerformed(evt);
            }
        });

        btnEliminarCat.setText("ELIMINAR");
        btnEliminarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCrearCat)
                .addGap(38, 38, 38)
                .addComponent(btnBuscarCat)
                .addGap(30, 30, 30)
                .addComponent(btnEditarCat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(btnEliminarCat)
                .addGap(35, 35, 35))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearCat)
                    .addComponent(btnBuscarCat)
                    .addComponent(btnEditarCat)
                    .addComponent(btnEliminarCat))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(27, 27, 27))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(5, 5, 5)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtBornYearCat, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(txtCodeCat))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtColorCat)
                            .addComponent(txtNameCat)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cbHealthStatusCat, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(17, 17, 17)
                        .addComponent(cbBreedCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodeCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNameCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBornYearCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtColorCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbHealthStatusCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(cbBreedCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(63, 63, 63)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Cat Manager", jPanel2);

        jLabel8.setText("Code:");

        jLabel9.setText("Name:");

        jLabel10.setText("Born year:");

        jLabel11.setText("Color:");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));

        btnCrearDog.setText("CREAR");
        btnCrearDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearDogActionPerformed(evt);
            }
        });

        btnBuscarDog.setText("BUSCAR");
        btnBuscarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDogActionPerformed(evt);
            }
        });

        btnEditarDog.setText("EDITAR");
        btnEditarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarDogActionPerformed(evt);
            }
        });

        btnEliminarDog.setText("ELIMINAR");
        btnEliminarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnCrearDog)
                .addGap(18, 18, 18)
                .addComponent(btnBuscarDog)
                .addGap(18, 18, 18)
                .addComponent(btnEditarDog)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarDog)
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearDog)
                    .addComponent(btnBuscarDog)
                    .addComponent(btnEditarDog)
                    .addComponent(btnEliminarDog))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jLabel12.setText("Health Status:");

        jLabel13.setText("Breed:");

        cbHealthStatusDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sick", "Healthy", "In Surgery" }));

        cbBreedDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Criollo", "Schnauzer", "German Shepherd", "Pincher" }));

        cbPedigree.setText("Pedigree");
        cbPedigree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPedigreeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBornYearDog))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(26, 26, 26)
                                .addComponent(txtCodeDog, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbHealthStatusDog, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbBreedDog, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(cbPedigree))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtColorDog))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNameDog)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(txtCodeDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNameDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(txtBornYearDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtColorDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(cbHealthStatusDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbBreedDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPedigree))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Dog Manager", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbPedigreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPedigreeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPedigreeActionPerformed

    private void btnBuscarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDogActionPerformed
        //JOptionPane.showMessageDialog(this, "Buscar es una prueba desde perro");
        String code = txtCodeDog.getText();
        boolean found=false;
        for (clsDog dog : dogObjectList) {
            if(dog.getCode().equals(code)){
                txtNameDog.setText(dog.getName());
                txtColorDog.setText(dog.getColor());
                txtBornYearDog.setText(dog.getBorn_year()+"");
                cbHealthStatusDog.setSelectedItem(dog.getHealthStatus());
                cbBreedDog.setSelectedItem(dog.getBreed());
                cbPedigree.setSelected(dog.isPedigree());
                found= true;
                break;
            }         
        }
        if (!found){
            JOptionPane.showMessageDialog(this, "Code not found");
        }
        
    }//GEN-LAST:event_btnBuscarDogActionPerformed

    private void btnEditarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarDogActionPerformed
        //JOptionPane.showMessageDialog(this, "Editar es una prueba desde perro");
        String code = txtCodeDog.getText();
        boolean found=false;
        for (clsDog dog : dogObjectList) {
            if(dog.getCode().equals(code)){             
                String name = txtNameDog.getText();
                String color= txtColorDog.getText();
                int bornYear= Integer.parseInt( txtBornYearDog.getText());        
                String breed = cbBreedDog.getSelectedItem().toString();
                String healthStatus= cbHealthStatusDog.getSelectedItem().toString();
                boolean pedigree= cbPedigree.isSelected();
                
                dog.setName(name);
                dog.setBorn_year(bornYear);
                dog.setBreed(breed);
                dog.setColor(color);
                dog.setHealthStatus(healthStatus);
                dog.setPedigree(pedigree);
                JOptionPane.showMessageDialog(this, "Record update successfuly"); 
                this.clearDogFields();
                this.FillJlistDog();
                found= true;
                break;
            }        
        }
         if (!found){
            JOptionPane.showMessageDialog(this, "Code not found");          
        }
    }//GEN-LAST:event_btnEditarDogActionPerformed

    private void btnEliminarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDogActionPerformed
       //JOptionPane.showMessageDialog(this, "Eliminar es una prueba dede perro");
       String code = txtCodeDog.getText();
        boolean found=false;
        for (clsDog dog : dogObjectList) {
            if(dog.getCode().equals(code)){             
                this.dogObjectList.remove(dog);
                JOptionPane.showMessageDialog(this, "Record update successfuly");               
                this.FillJlistDog();
                this.clearDogFields();
                found= true;
                break;
            }        
        }
         if (!found){
            JOptionPane.showMessageDialog(this, "Code not found");          
        }     
    }//GEN-LAST:event_btnEliminarDogActionPerformed

    private void btnCrearCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCatActionPerformed
        //JOptionPane.showMessageDialog(this,"Crear es un prueba desde gato");
       try{
           String code = txtCodeCat.getText();
           String name = txtNameCat.getText();
           int bornYear= Integer.parseInt( txtBornYearCat.getText());
           String color= txtColorCat.getText();
           String breed = cbBreedCat.getSelectedItem().toString();
           String healthStatus= cbHealthStatusCat.getSelectedItem().toString();
           
           if (code.equals("") || name.equals("") || color.equals("") && code.equals(code)){
               JOptionPane.showMessageDialog(this, "Fill all fields");
           }else{
               clsCat cat = new clsCat(breed, code, name, bornYear, color, healthStatus);                        
               catObjectList.add(cat);
               this.FillJlistCat();
               this.clearCatFields();
               JOptionPane.showMessageDialog(this, "The record has been saved");
                }                    
       }catch(Exception e){
           JOptionPane.showMessageDialog(this, "Please add a valid born year");
       }      
    }//GEN-LAST:event_btnCrearCatActionPerformed

    private void btnCrearDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearDogActionPerformed
       // JOptionPane.showMessageDialog(this, "Esta es una prueba crear desde perro");
       try{
           String code = txtCodeDog.getText();
           String name = txtNameDog.getText();
           String color= txtColorDog.getText();
           int bornYear= Integer.parseInt( txtBornYearDog.getText());        
           String breed = cbBreedDog.getSelectedItem().toString();
           String healthStatus= cbHealthStatusDog.getSelectedItem().toString();
           boolean pedigree= cbPedigree.isSelected();
           
           if (code.equals("") || name.equals("") || color.equals("")){
               JOptionPane.showMessageDialog(this, "Fill all fields");
        }else{
               clsDog dog = new clsDog(breed, pedigree, code, name, bornYear, color, healthStatus);
               dogObjectList.add(dog);
               this.FillJlistDog();
               this.clearDogFields();
               JOptionPane.showMessageDialog(this, "The record has been saved");
           }                   
         }catch(Exception e){
           JOptionPane.showMessageDialog(this, "Please add a valid born year");
       }      
    }//GEN-LAST:event_btnCrearDogActionPerformed

    private void btnBuscarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCatActionPerformed
        //JOptionPane.showMessageDialog(this, "Buscar es una prueba desde gato");
        String code = txtCodeCat.getText();
        boolean found=false;
        for (clsCat cat : catObjectList) {
            if(cat.getCode().equals(code)){
                txtNameCat.setText(cat.getName());
                txtColorCat.setText(cat.getColor());
                txtBornYearCat.setText(cat.getBorn_year()+"");
                cbHealthStatusCat.setSelectedItem(cat.getHealthStatus());
                cbBreedCat.setSelectedItem(cat.getBreed());
                found= true;
                break;
            }
            
        }
        if (!found){
            JOptionPane.showMessageDialog(this, "Code not found");
        }
    }//GEN-LAST:event_btnBuscarCatActionPerformed

    private void btnEditarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCatActionPerformed
        //JOptionPane.showMessageDialog(this, "Editar es una prueba desde gato");
        String code = txtCodeCat.getText();
        boolean found=false;
        for (clsCat cat : catObjectList) {
            if(cat.getCode().equals(code)){             
                String name = txtNameCat.getText();
                String color= txtColorCat.getText();
                int bornYear= Integer.parseInt( txtBornYearCat.getText());        
                String breed = cbBreedCat.getSelectedItem().toString();
                String healthStatus= cbHealthStatusCat.getSelectedItem().toString();
                
                cat.setName(name);
                cat.setBorn_year(bornYear);
                cat.setBreed(breed);
                cat.setColor(color);
                cat.setHealthStatus(healthStatus);
                JOptionPane.showMessageDialog(this, "Record update successfuly"); 
                this.clearCatFields();
                this.FillJlistCat();
                found= true;
                break;
            }          
        }
        if (!found){
            JOptionPane.showMessageDialog(this, "Code not found");        
        }
    }//GEN-LAST:event_btnEditarCatActionPerformed

    private void btnEliminarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCatActionPerformed
        //JOptionPane.showMessageDialog(this, "Eliminar es una prueba desde gato");
        String code = txtCodeCat.getText();
        boolean found=false;
        for (clsCat cat : catObjectList) {
            if(cat.getCode().equals(code)){             
                this.catObjectList.remove(cat);
                JOptionPane.showMessageDialog(this, "Record update successfuly"); 
                this.clearCatFields();
                this.FillJlistCat();
                found= true;
                break;
            }        
        }
         if (!found){
            JOptionPane.showMessageDialog(this, "Code not found");          
        } 
    }//GEN-LAST:event_btnEliminarCatActionPerformed

    private void FillJlistDog(){
        DefaultListModel model = new DefaultListModel();
        int index =0;
        for (clsDog dog : dogObjectList) {
            String data = dog.getName()+" - "+dog.getBreed()+" -Perro";
            model.add(index, data);
            index++;         
        }
        petList.setModel(model);
 
    }
    private void clearDogFields(){
        txtCodeDog.setText("");
        txtNameDog.setText("");
        txtColorDog.setText("");
        txtBornYearDog.setText("");
        cbHealthStatusDog.setSelectedIndex(0);
        cbBreedDog.setSelectedIndex(0);
        cbPedigree.setSelected(false);
    }
     private void clearCatFields(){
        txtCodeCat.setText("");
        txtNameCat.setText("");
        txtColorCat.setText("");
        txtBornYearCat.setText("");
        cbHealthStatusCat.setSelectedIndex(0);
        cbBreedCat.setSelectedIndex(0);
       
    }
 
    private void FillJlistCat(){
        DefaultListModel model = new DefaultListModel();
        int index =0;
        for (clsCat cat : catObjectList) {
            String data = cat.getName()+" - "+cat.getBreed()+" -Gato";
            model.add(index, data);
            index++; 
            
        }
        petList.setModel(model); 
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCat;
    private javax.swing.JButton btnBuscarDog;
    private javax.swing.JButton btnCrearCat;
    private javax.swing.JButton btnCrearDog;
    private javax.swing.JButton btnEditarCat;
    private javax.swing.JButton btnEditarDog;
    private javax.swing.JButton btnEliminarCat;
    private javax.swing.JButton btnEliminarDog;
    private javax.swing.JComboBox<String> cbBreedCat;
    private javax.swing.JComboBox<String> cbBreedDog;
    private javax.swing.JComboBox<String> cbHealthStatusCat;
    private javax.swing.JComboBox<String> cbHealthStatusDog;
    private javax.swing.JCheckBox cbPedigree;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> petList;
    private javax.swing.JTextField txtBornYearCat;
    private javax.swing.JTextField txtBornYearDog;
    private javax.swing.JTextField txtCodeCat;
    private javax.swing.JTextField txtCodeDog;
    private javax.swing.JTextField txtColorCat;
    private javax.swing.JTextField txtColorDog;
    private javax.swing.JTextField txtNameCat;
    private javax.swing.JTextField txtNameDog;
    // End of variables declaration//GEN-END:variables

}
